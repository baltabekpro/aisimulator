version: '3.8'

services:
  # База данных PostgreSQL
  postgres:
    container_name: aibot-postgres-1
    image: postgres:13-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always

  # API сервер (FastAPI + Uvicorn)
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: ${API_CONTAINER_NAME}
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./:/app
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://aibot:postgres@postgres:5432/aibot?client_encoding=utf8
    ports:
      - "8000:8000"  # Публичный порт API
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000
    restart: unless-stopped

  # Admin панель (Flask + Gunicorn)
  admin:
    build:
      context: .
      dockerfile: Dockerfile.admin
    container_name: ${ADMIN_CONTAINER_NAME}
    depends_on:
      postgres:
        condition: service_healthy
      api:
        condition: service_started
    volumes:
      - ./:/app
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://aibot:postgres@postgres:5432/aibot?client_encoding=utf8
      - API_BASE_URL=http://api:8000/api/v1
      - FLASK_APP=admin_panel.app
      - FLASK_ENV=development
    ports:
      - "5000:5000"  # Публичный порт админ-панели
    command: gunicorn -w 2 -b 0.0.0.0:5000 "admin_panel.app:app"
    restart: unless-stopped

  # Telegram бот
  telegram:
    build:
      context: .
      dockerfile: Dockerfile.bot
    container_name: ${BOT_CONTAINER_NAME}
    depends_on:
      postgres:
        condition: service_healthy
      api:
        condition: service_started
    volumes:
      - ./:/app
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://aibot:postgres@postgres:5432/aibot?client_encoding=utf8
      - API_BASE_URL=http://api:8000/api/v1
    restart: unless-stopped

volumes:
  postgres_data: