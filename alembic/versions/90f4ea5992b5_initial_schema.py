"""Initial schema

Revision ID: 90f4ea5992b5
Revises: 
Create Date: 2025-03-21 10:50:42.030260

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '90f4ea5992b5'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=False),
    sa.Column('email', sa.String(length=128), nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('external_id', sa.String(), nullable=True),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('preferences', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('external_id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('ai_partners',
    sa.Column('partner_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('name', sa.String(length=32), nullable=True),
    sa.Column('age', sa.SmallInteger(), nullable=True),
    sa.Column('biography', sa.Text(), nullable=True),
    sa.Column('personality', sa.JSON(), nullable=True),
    sa.Column('parameters', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('partner_id')
    )
    op.create_table('events',
    sa.Column('event_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('partner_id', sa.UUID(), nullable=True),
    sa.Column('type', sa.String(length=32), nullable=True),
    sa.Column('status', sa.String(length=32), nullable=True),
    sa.Column('schedule', sa.JSON(), nullable=True),
    sa.Column('details', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.CheckConstraint("status IN ('pending', 'active', 'completed')", name='check_event_status'),
    sa.CheckConstraint("type IN ('daily', 'global', 'quest')", name='check_event_type'),
    sa.ForeignKeyConstraint(['partner_id'], ['ai_partners.partner_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('event_id')
    )
    op.create_table('gifts',
    sa.Column('gift_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('partner_id', sa.UUID(), nullable=True),
    sa.Column('gift_type', sa.String(length=32), nullable=True),
    sa.Column('impact', sa.SmallInteger(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.CheckConstraint("gift_type IN ('цветы', 'конфеты', 'игрушка')", name='check_gift_type'),
    sa.CheckConstraint('impact BETWEEN -5 AND 5', name='check_impact_range'),
    sa.ForeignKeyConstraint(['partner_id'], ['ai_partners.partner_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('gift_id')
    )
    op.create_table('love_rating',
    sa.Column('rating_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('partner_id', sa.UUID(), nullable=True),
    sa.Column('score', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.CheckConstraint('score >= 0 AND score <= 100', name='check_score_range'),
    sa.ForeignKeyConstraint(['partner_id'], ['ai_partners.partner_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('rating_id')
    )
    op.create_table('messages',
    sa.Column('message_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('partner_id', sa.UUID(), nullable=True),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('sender_type', sa.String(length=4), nullable=True),
    sa.Column('emotion', sa.String(length=32), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.CheckConstraint("sender_type IN ('user', 'bot')", name='check_sender_type'),
    sa.ForeignKeyConstraint(['partner_id'], ['ai_partners.partner_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('message_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('messages')
    op.drop_table('love_rating')
    op.drop_table('gifts')
    op.drop_table('events')
    op.drop_table('ai_partners')
    op.drop_table('users')
    # ### end Alembic commands ###
